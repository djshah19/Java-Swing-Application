/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.MentalHealthCheckUp;

import business.MentalHealthReport.MentalHealthReport;
import business.Network.Network;
import business.Organization.Organization;
import business.UserAccount.UserAccount;
import business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dhwani
 */
public class MhcpOpenRequest extends javax.swing.JPanel {

    /**
     * Creates new form mhcpOpenRequest
     */
    private JPanel userProcessContainer;
    private Organization organization; 
    private Network network;
    private UserAccount account;
    MhcpOpenRequest(JPanel userProcessContainer, Organization organization, Network network, UserAccount account) {
       initComponents();
       this.userProcessContainer = userProcessContainer;
       this.account = account;
       this.organization = organization;
       this.network = network;
       populateTable();
//        tblHospitalRequests.getColumnModel().getColumn(3).setMinWidth(0);
//        tblHospitalRequests.getColumnModel().getColumn(3).setMaxWidth(0);
    }
    public void populateTable(){
    DefaultTableModel dtm = (DefaultTableModel)tblHospitalRequests.getModel();
    dtm.setRowCount(0);
    for(WorkRequest wr : organization.getWorkQueue().getWorkRequest()){
    if(wr.getMessage().equalsIgnoreCase("Pending with Hospital")){
    Object[] row = new Object[5];
    row[0] = wr.getNo();
    row[1] = wr.getSender().getCustomer().getId();
    row[2] = wr.getSender().getCustomer().getfName() + " " + wr.getSender().getCustomer().getlName();
    row[3] = wr;
    row[4] = wr.getMessage();
    dtm.addRow(row);}
    }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblHospitalRequests = new javax.swing.JTable();
        btnScdApp = new javax.swing.JButton();
        btnSubRep = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(19, 115, 163));

        tblHospitalRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request No", "Id", "Name", "Status", "Message"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblHospitalRequests);

        btnScdApp.setBackground(new java.awt.Color(0, 153, 153));
        btnScdApp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnScdApp.setForeground(new java.awt.Color(255, 255, 255));
        btnScdApp.setText("Schedule an Appointment");
        btnScdApp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnScdAppActionPerformed(evt);
            }
        });

        btnSubRep.setBackground(new java.awt.Color(0, 153, 153));
        btnSubRep.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSubRep.setForeground(new java.awt.Color(255, 255, 255));
        btnSubRep.setText("Submit Report");
        btnSubRep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubRepActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 153, 153));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("<< Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("Open Request(s)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(btnSubRep, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnScdApp, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(jButton1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addComponent(jLabel1)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(7, 7, 7)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnScdApp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSubRep)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnScdAppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnScdAppActionPerformed
    int selectedRow = tblHospitalRequests.getSelectedRow();
    if(selectedRow>=0){
    WorkRequest wr = (WorkRequest)tblHospitalRequests.getValueAt(selectedRow, 3);
    if(wr.getStatus().equalsIgnoreCase("Appointment Scheduled")){
    JOptionPane.showMessageDialog(null, "Appointment already scheduled");
    return;
    }
    ScheduleAppointmentJPanel panel = new ScheduleAppointmentJPanel(userProcessContainer, wr);
    userProcessContainer.add("ScheduleAppointmentJPanel", panel);
    CardLayout layout = (CardLayout)userProcessContainer.getLayout();
    layout.next(userProcessContainer);
    }
    else{
    JOptionPane.showMessageDialog(null, "Please select any row");
    }
    }//GEN-LAST:event_btnScdAppActionPerformed

    private void btnSubRepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubRepActionPerformed
    int selectedRow = tblHospitalRequests.getSelectedRow();
    if(selectedRow>=0){
    MentalHealthReport inMhr = null;
    WorkRequest wr = (WorkRequest)tblHospitalRequests.getValueAt(selectedRow, 3);
    if(!wr.getStatus().equalsIgnoreCase("Appointment Scheduled")){
    JOptionPane.showMessageDialog(null, "Mental examination not done");
    return;
    }
    for(MentalHealthReport mhr : wr.getMentalHealthReportDirectory().getMentalHealthReport()){
    inMhr = mhr;
    break;
    }
    if(inMhr==null){
    SubmitReportJPanel panel = new SubmitReportJPanel(userProcessContainer, wr, network);
    userProcessContainer.add("SubmitReportJPanel", panel);
    CardLayout layout = (CardLayout)userProcessContainer.getLayout();
    layout.next(userProcessContainer);
    }else{
    JOptionPane.showMessageDialog(null, "Report already submitted");
    }
    }else{
    JOptionPane.showMessageDialog(null, "Please select any row");
    }
    }//GEN-LAST:event_btnSubRepActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    userProcessContainer.remove(this);
    CardLayout layout = (CardLayout)userProcessContainer.getLayout();
    layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnScdApp;
    private javax.swing.JButton btnSubRep;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblHospitalRequests;
    // End of variables declaration//GEN-END:variables
}
